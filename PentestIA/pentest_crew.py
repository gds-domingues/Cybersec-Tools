from crewai import Agent, Task, Crew, Process
from tools.bash_script_executor_tool import bash_script_executor
from tools.file_organizer_tool import file_organizer
from tools.chatgpt_pentester_tool import chatgpt_pentester_tool
from tools.bash_script_executor_tool import bash_script_executor
from tools.file_organizer_tool import file_organizer


def setup_crew():
    """
    Sets up and configures the agents, tasks, and crew for the pentesting project.
    """
    bash_runner = Agent(
        role="Bash Script Executor",
        goal="Execute various bash scripts on the target IP and gather outputs.",
        backstory="Specialized in executing scripts, you're quick, efficient, and detail-oriented.",
        tools=[bash_script_executor]
    )

    output_analyzer = Agent(
        role="Data Organizer",
        goal="Organize bash script outputs and prepare them for analysis.",
        backstory="As an organized analyst, you ensure information is well-structured and clear.",
        tools=[file_organizer]
    )

    pentester = Agent(
        role="Vulnerability Researcher",
        goal="Identify potential vulnerabilities and exploitation paths for the target IP.",
        backstory="You're a skilled pentester, experienced in discovering and suggesting exploitation techniques.",
        tools=[chatgpt_pentester_tool]
    )

    run_bash_task = Task(
        description="Execute a set of bash scripts on the provided target IP address and collect their outputs.",
        expected_output="A set of output files from each executed bash script, stored in the designated output directory.",
        agent=bash_runner
    )

    organize_task = Task(
        description="Collect and organize all output files generated by the Bash Runner, and combine them into a structured document.",
        expected_output="A single organized file consolidating all bash outputs, formatted for easy review.",
        agent=output_analyzer
    )

    vulnerability_task = Task(
        description="Review the organized bash outputs file, identify potential vulnerabilities, and suggest exploitation methods.",
        expected_output="A detailed report with recommended exploitation methods based on found vulnerabilities.",
        agent=pentester
    )

    crew = Crew(
        agents=[bash_runner, output_analyzer, pentester],
        tasks=[run_bash_task, organize_task, vulnerability_task],
        process=Process.sequential
    )

    return crew
